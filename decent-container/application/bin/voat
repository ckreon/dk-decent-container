#!/bin/bash
if [ "$(id -u)" != "0" ]; then
	echo "Voat must be run as root" 1>&2
	exit 1
fi

SRC_DIR="/application"
LOG_FILE=/application/var/log/voat.log

if [ -f $LOG_FILE ]
then
    echo Log File Exists! Good for you buddy, you did it, you saved christmas!
else 
   mkdir -p /application/var/log/
   touch voat.log
   chmod +w $LOG_FILE
fi



start(){
	echo > $LOG_FILE
	echo "Checking for services!"
	directoryx="$(dirname -- $(readlink -fn -- "$0"; echo x))"
	directory="${directoryx%x}"
	echo "The current directory is: $directory"
	var_path=$PWD  
	echo "We are currently sitting at: $var_path"
	if  print "[Preflight]: \t : Log write test!";then 
		echo "Preflight log test complete!"
	fi
	if [ -f $SRC_DIR/rest_server.py ]
	then
    		echo "We are well REST'd!" 
		/usr/bin/python3 $SRC_DIR/rest_server.py 2>&1 | awk '{print "[REST]:   \t", $0}' >> $LOG_FILE &
	else
		echo "Bummer, we forgot to REST" 
	fi	
        if [ -f $SRC_DIR/listener.py ]
        then
                echo "You're a good Listener!" 
                /usr/bin/python3 $SRC_DIR/rest_server.py 2>&1 | awk '{print "[REST]:   \t", $0}' >> $LOG_FILE &
        else
                echo "I know listen up is a phrase, but is listen down, one? It's about to be... yeah ..."
        fi
	echo "Starting Voat server..."
	echo $! > /var/run/voat.pid
	echo "Starting Celery..."
	celery -A voat_utils.updater worker --loglevel=info 2>&1 | awk '{print "[Celery]:\t", $0}' >> $LOG_FILE &
	if service --status-all 2>&1 | grep -Fq 'celery'; then    
	  echo "Celery... "   
	fi
	echo "Starting Listener..."
	FLASK_APP=$SRC_DIR/listener.py flask run --host 0.0.0.0 --port 8000 2>&1 | awk '{print "[Listener]:\t", $0}' >> $LOG_FILE &
	echo
	echo "Logging at $LOG_FILE"
	echo 
	echo "Checking that things are listening..."
	lsof -i:8000
	if service --status-all 2>&1 | grep -Fq 'voat'; then
          echo "Yay! Everything is running!"
        fi
}
stop(){
	if [ -f /var/run/voat.pid ]; then
		echo "Stopping Voat server..."
		for pid in `ps aux | grep rest_server | awk '{print $2}'`; do
			kill -9 $pid &> /dev/null
			echo "Killed $pid"
		done
		echo
		echo "Stopping Celery..."
		pkill celery
		echo "Stopping Listener..."
		pkill flask
		rm /var/run/voat.pid
	else
		echo "Voat server is not running."
	fi
}
status(){
	if [ -f /var/run/voat.pid ]; then
		echo "Voat server is running."
		echo "PID: $(cat /var/run/voat.pid)"
		exit 0
	else
		echo "Voat server is not running"
	fi
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status
		;;
	*)
		echo "Usage: sudo voat start|stop|restart"
		exit 1
esac
